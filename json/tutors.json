{"version":"tutors-json 2.1.5 (tutors-lib: ^0.5.4)","properties":{"slack":"https://tutors-ts-group.slack.com/messages/CCKS0HR0Q","moodle":"https://moodle.wit.ie/course/view.php?id=118143&section=3","youtube":"https://www.youtube.com/playlist?list=PLMW4bgOfD3Dwi6FWirJ3AQtXZ-N_hV3Eo","zoom":"https://zoom.us/","credits":"Ben Capper, Red Hat / WIT","auth":0,"ignorepin":1111},"title":" Tutors Documentation ","type":"course","summary":"<b>Documentation for the Tutors application</b>","img":"https://{{COURSEURL}}//","videoids":{"videoid":"","videoIds":[]},"id":"tutors-starter","hide":false,"frontMatter":{"icon":{"type":"flat-color-icons:reading"}},"los":[{"title":" Get Started ","type":"topic","summary":"<b>Setup a Tutors course and learn the basics</b>","img":"https://{{COURSEURL}}/topic-01/topic.jpg","videoids":{"videoid":"","videoIds":[]},"id":"topic-01","route":"#topic/{{COURSEURL}}/topic-01","hide":false,"frontMatter":{"icon":{"type":"flat-color-icons:reading"}},"los":[{"title":" First Contact ","type":"unit","summary":"","img":"https://{{COURSEURL}}/topic-01/unit-1/talk-1/talk-1.jpg","videoids":{"videoid":"","videoIds":[]},"id":"unit-1","route":"#topic/{{COURSEURL}}/topic-01/","hide":false,"los":[{"title":" First Contact ","type":"talk","summary":"<b>Lecture: Learn how to set up a Tutors course website</b>","img":"https://{{COURSEURL}}/topic-01/unit-1/talk-1/talk-1.jpg","videoids":{"videoid":"","videoIds":[]},"id":"talk-1","route":"#talk/{{COURSEURL}}/topic-01/unit-1/talk-1/talk-1.pdf","hide":false,"frontMatter":{"icon":{"type":"flat-color-icons:data-configuration"}},"pdf":"https://{{COURSEURL}}/topic-01/unit-1/talk-1/talk-1.pdf"},{"title":"Setup","type":"lab","summary":"<b>Lab: Learn how to set up a Tutors course website</b>","img":"https://{{COURSEURL}}/topic-01/unit-1/book-a/img/main.png","videoids":{"videoid":"","videoIds":[]},"id":"book-a","route":"#lab/{{COURSEURL}}/topic-01/unit-1/book-a","hide":false,"frontMatter":{"icon":{"type":"flat-color-icons:data-configuration"}},"los":[{"title":"# First Contact","shortTitle":"Setup","contentMd":"# First Contact\n\n<b>Lab: Learn how to set up a Tutors course website</b>\n<br />\n\n- Download the template Tutors course\n\n\n- Install Node.js\n\n\n- Install Typora\n\n\n- Configure and deploy the Tutors course via Netlify","route":"#lab/{{COURSEURL}}/topic-01/unit-1/book-a/Setup"},{"title":"# Download the Template Tutors Course","shortTitle":"Template","contentMd":"# Download the Template Tutors Course\n\n1. Download the following `.zip` file and save it to your preferred location. (It is advised to save this file in your `Documents` folder for ease of access later. This documentation assumes this is the location of your file)\n     - Keep note of where your .zip file is stored, throughout this tutorial there are references to the file path which means the path to the folder extracted from this .zip file, in your file explorer.\n     - [Tutors Template Course](archives/tutors-starter.zip)\n2. Extract the .zip file:\n     - `Right click` -> `Extract here`\n     ![Extract Here](img/extract_here.png)\n\nYou now have a Tutors course file structure saved to your Documents folder, we will use this in later steps to deploy the site using Netlify.\n\n","route":"#lab/{{COURSEURL}}/topic-01/unit-1/book-a/Template"},{"title":"# Install Node.js","shortTitle":"Node.js","contentMd":"# Install Node.js\n\n1. Select the following link and download the `LTS` version:\n    - [Node.js](https://nodejs.org)\n\n2. Select `Save` and run the installation when the download is complete.\n\n3. Select `Next` until installation begins.\n\n","route":"#lab/{{COURSEURL}}/topic-01/unit-1/book-a/Node.js"},{"title":"# Typora","shortTitle":"Typora","contentMd":"# Typora\n\n<span style=\"color: red\">Be Aware:</span> Typora is currently free while in Beta testing, however this will change with the release of the official version.\n\nSome features of Typora are <span style=\"color: red\">not</span> currently compatible with Tutors but will be integrated over time. This includes the functionality mentioned below.\n\nTypora adds additional functionality to the Markdown notation, such as `Highlighting`, `Diagrams`, `Maths`, `Emoji's`, and `Diagrams`. Unlike other editors, Typora is a Markdown only editor, meaning other files such as `properties.yaml` cannot be edited with this application.\n\nHowever, Typora is unique, allowing the user to view the output of their markdown, as they write it. This greatly reduces the time required for testing page formatting. \n\n![](img/typor.png)\n\nTo view the code which is in effect, just click the area which has been formatted. In this example, `Be Aware` is red due to a `<span>` tag, to see the code causing this, just click the content in question; in this case: `Be Aware`.\n\n![](img/spanexam.png)\n\n---\n\n# Installation\n\n1. Follow this link and select the operating system you are using:\n    - [Typora Download](https://typora.io/#download)\n\n2. `Install` the application and launch it.<br />\n\n3. Select `File` -> `Open Folder..`, then select the `tutors-starter` folder. <br />\n\n   ![](img/open.png)\n\n4. You should see the folder structure open in the sidebar to the left. If the side bar is a `list` rather than a `tree`, select this option at the bottom of the sidebar:\n\n    ![](img/treety.png)\n\n5. To set Typora as your default editor for `Markdown` files, navigate to your `tutors-starter` folder in `File Explorer`, then `Right Click` any `Markdown` file and select `Open With..` -> `Choose another app`\n\n    ![Open With](img/openwith.png)\n\n6. The following window will appear, select `More apps`:\n\n    ![More Apps](img/moreapps.png)\n\n7. Scroll down and select `Typora`, also check the box labelled `Always use this app to open .md files`, then select `OK`.\n\n    ![Make Default](img/chosen.png)\n\nYou will notice that the icon representing `.md` files is now a Markdown File icon . This means Typora is your default Markdown file editor.\n\n![Icon Changed](img/fin.png)       \n","route":"#lab/{{COURSEURL}}/topic-01/unit-1/book-a/Typora"},{"title":"# Configure and Deploy via Netlify","shortTitle":"Netlify","contentMd":"# Configure and Deploy via Netlify\r\n\r\n1. Navigate to Netlify via the following link and select `Sign up`, located to the top right of the screen. You can also simply log in via your GitHub or BitBucket accounts:\r\n    - [Netlify](www.netlify.com)\r\n\r\n2. Create an account and log in. You should see a page like this:\r\n\r\n     ![Netlify Home](img/nethome.png)\r\n\r\n3. Underneath the `Sites` heading is a box where you should drag and drop the `json` folder from inside the `tutors-starter` folder. \r\n\r\n    - Only drag the `json` folder into the box, if you drag anything other than the json folder into this box, the site will not deploy. \r\n\r\n     ![Drag and Drop json](img/drag.png)\r\n\r\n4. The site will deploy and you will be redirected  to the site overview page:\r\n\r\n     ![Site Overview](img/newsite.png)\r\n\r\n5. You can see under `Production Deploys` that the site has been published, click the link in the box at the top of the page. \r\n\r\n     ![Top Box](img/topbox.png)\r\n\r\n6. This will bring you to your Tutors course website.\r\n\r\n     ![Home](img/thome.png)\r\n\r\n7. Navigate back to Netlify and select the `Domain settings` button, then scroll down to the `Custom Domains` section.\r\n     ![Domain Settings](img/20-domain.png)\r\n\r\n8. Click the Dropdown `Options` button and select `Edit site name`.\r\n     ![Edit Site Name](img/21-sitename.png)\r\n\r\n9. Enter the desired domain name for your Tutors site and click `Save`.\r\n     ![Choose a Name](img/22-changed.png)\r\n     \r\n10. Return to the `Site Overview` page where you will notice the link to your site has changed.\r\n\r\nIn the next section, we will explore the file structure and components of a Tutors course before making some small changes.\r\n\r\n","route":"#lab/{{COURSEURL}}/topic-01/unit-1/book-a/Netlify"}]}]},{"title":" Course Structure ","type":"unit","summary":"","img":"https://{{COURSEURL}}/topic-01/unit-2/talk-1/talk-1.jpg","videoids":{"videoid":"","videoIds":[]},"id":"unit-2","route":"#topic/{{COURSEURL}}/topic-01/","hide":false,"los":[{"title":" Course Structure ","type":"talk","summary":"<b>Lecture: Learn the Tutors file structure and components</b>","img":"https://{{COURSEURL}}/topic-01/unit-2/talk-1/talk-1.jpg","videoids":{"videoid":"","videoIds":[]},"id":"talk-1","route":"#talk/{{COURSEURL}}/topic-01/unit-2/talk-1/talk-1.pdf","hide":false,"frontMatter":{"icon":{"type":"flat-color-icons:flow-chart"}},"pdf":"https://{{COURSEURL}}/topic-01/unit-2/talk-1/talk-1.pdf"},{"title":"Structure","type":"lab","summary":"<b>Lab: Learn the Tutors file structure and components</b>","img":"https://{{COURSEURL}}/topic-01/unit-2/book-a/img/main.jpg","videoids":{"videoid":"","videoIds":[]},"id":"book-a","route":"#lab/{{COURSEURL}}/topic-01/unit-2/book-a","hide":false,"frontMatter":{"icon":{"type":"flat-color-icons:flow-chart"}},"los":[{"title":"# Tutors Course Structure","shortTitle":"Structure","contentMd":"# Tutors Course Structure\n\n<b>Lab: Learn the Tutors file structure and components</b>\n<br />\n\n- Understand the file structure of a Tutors course\n\n\n- Get to know the various topic types\n\n\n- Identify important files\n\n\n- Make changes with Markdown\n\n\n- Regenerate and Redeploy your Tutors course","route":"#lab/{{COURSEURL}}/topic-01/unit-2/book-a/Structure"},{"title":"# Tutors File Structure","shortTitle":"FileStructure","contentMd":"# Tutors File Structure\n\nThe template Tutors course `tutors-starter` which you downloaded in the first lab contains a file structure. This is where your course is formatted and organised to successfully create a Tutors course website.\n\nThis section identifies each folder and its purpose.\n\n![Closed tree](img/f1.png)\n\n## json\n\nThis folder is automatically generated when the command `npx tutors-json` is run in the terminal, when in the tutors-starter directory. The contents of this file are used by Netlify to build and deploy the Tutors site. This will be elaborated on further in later steps.\n\n**Note**: If you are experimenting with the file structure and the `npx tutors-json` command is not applying changes correctly, just delete this folder and run the command again!\n\n##  topic-0*\n\n![Topic](img/f2.png)\n\nAs the name suggests, each topic folder represents a topic within a module, much like a chapter of a book.\n\nYou can create more topic folders by copy / pasting an existing one, just be sure to follow the naming convention `topic-**`, replacing the \"\\*\" with digits.\n\n## unit-*\n\n![Unit](img/f3.png)\n\nUnits split each topic further, allowing for a clear definition between course content in each unit, and allowing for separate titles for each unit. \n\nYou can create more unit folders by copy / pasting an existing one, just be sure to follow the naming convention `unit-*`, replacing the \"\\*\" with a digit.\n\n## book-* / talk-*\n\n![Labs and Talks](img/f4.png)\n\nThe `book-a` folder represents a lab module, where you can use Markdown to easily outline steps for the class to follow. A Markdown guide is provided in later steps.\n\nThe `talk-*` folders represent presentations, these can be in the form of YouTube videos or `.pdf` files.\n\nYou can create more lab and talk folders by copy / pasting an existing one, just be sure to follow the naming convention `book-*`, replacing the \"\\*\" with a character for labs, or `talk-*`, this time replacing with a digit.\n\n`book-*` contains `img` and `archives` folders.\n\n## img / archives\n\nThe `img` folder is where any images used within the lab must be stored so they can be linked to. It is important to note that each `book-*` folder has its own `img` folder and will not find images placed in any lab `img` folder other than its own.\n\nThe `archives` folder is where any archived files such as `.zip` `.rar` `.tar.gz` must be stored so they can be linked to and downloaded. Like the `img` folder, the `archives` folder is specific to the `book-*` folder it is contained in and will not find archives in another labs `archives` folder.\n","route":"#lab/{{COURSEURL}}/topic-01/unit-2/book-a/FileStructure"},{"title":"# Topic Types","shortTitle":"Topics","contentMd":"# Topic Types\n\nEach topic type in Tutors is represented by a card with a particular icon. This image depicts most topic types and their corresponding icons:\n  ![Topics](img/topics.png)\n\nThe following is the sample Tutors course template used in this lab step which contains a sample of each topic type. This can be used to incorporate additional topic types into your own course, or just to further help understand topic structure.\n  - [Sample Template with all Topic Types](archives/topics.zip)\n\nThere are five topic types that can be utilised, as well as the option of displaying a `.pdf` file in either a `topic` or `unit`:\n\n- **Lecture**: These are represented in the file structure as `talk-*` and can contain a `.pdf` file, viewable as a slide deck, as well as a YouTube link or embedded video.\n\n- **Lab**: Represented in the file structure as `book-*` and contains a series of `.md` Markdown files, each containing a complete Lab step.\n\n- **Archives**: Represented in the file structure as `archives` and links to a `.zip`, `.rar`, `.tar.gz` file to be downloaded. Archives can also be placed within a Labs `archives` folder.\n\n- **GitHub Repository**: Represented in the file structure as `github-*-template-*` and contains a file with a link to the specified GitHub repo. This file can be opened and edited by any text editor, Notepad for example.\n\n- **Web Link**: Represented in the file structure as `web-1` and contains a file with a link to the specified website.\n\n- **Panel Talk**: Represented in the file structure as `paneltalk` and contains a `.pdf` file which is displayed in the topic or unit in which the `paneltalk` folder is located.\n\nEach of these folders also contain a `.md` Markdown file. These will be discussed in the next lab step.\n\n- The following is an example topic which contains two units, each unit contains:\n  - A Unit Heading\n  - 2 Lecture topics\n  - 2 Lab topics\n  - 1 Archive topic\n  - 2 GitHub Repo topics\n  - 1 Web Link topic\n\nUnit 2, while containing the same topics as Unit 1, also contains a `Panel Talk` which displays a `.pdf` file:\n\n![Unit 1](img/u1.png)\n![Unit 2](img/u2.png)","route":"#lab/{{COURSEURL}}/topic-01/unit-2/book-a/Topics"},{"title":"# Important Files","shortTitle":"Files","contentMd":"# Important Files\n\nIn this section we will go through each level in the file structure and understand the purpose and different elements of each file.\n\nAny file with the extension `.md` is a Markdown file, editable in Typora. Any other file types (excluding images) can be opened via a simple text editor such as Notepad.\n\n## tutors-starter\n\nThis is the higest level in the directory and contains the following noteworthy files:\n  - **course.md**: This file is where the `course title` and `description` are specified. This is viewable in the top left of the screen while on the course homepage. This file also specifies the icon used alongside the `course title`.\n\n  - **course.jpg**: If no icon is specified in `course.md`, this image will be used as the image in the top left of the course homepage. This image can be replaced by naming the new image `course` with either the `.jpg`, `.png`, or `.svg` file extensions\n\n  - **properties.yaml**: This file specifies links to resources such as Zoom and Slack, allows each user to credit themself for the course creation, and specifies any folders to be hidden from view, alongside the corresponding key to enable hidden topics by entering the pin into the homepage of the course site.\n\n\n## topic-**\n\nThis is one level into the file tree and contains the following noteworthy files:\n  - **topic.md**: This file is where the `topic title` and `description` are specified. This is viewable in the the corresponding topic card on the course homepage. This file also specifies the icon used on the topic card.\n\n  - **topic.jpg**: If no icon is specified in `topic.md`, this image will be used as the topic card image on the course homepage. This image can be replaced by naming the new image `topic` with either the `.jpg`, `.png`, or `.svg` file extensions.\n\n\n## unit-*\n\nWithin each `topic-*` folder, should be unit folders which separate course content into defined sections. There is just one file of note in a `unit-*` folder:\n  - **topic.md**: This file simply specifies the `Unit Heading`, no icons or descriptions should be defined here.\n\n\n## archive\n\nThis folder can be located within a `book-*`, `unit-*`, or `topic-*` folder. If located within a `unit-*` or `topic-*` folder, the following files must be present within this folder:\n  - **archive.md**: This file is where the `archive topic title` and `description` are specified. This is viewable in the the corresponding archive card. This file also specifies the icon used on the archive card.\n\n  - **archive.jpg**: If no icon is specified in `archive.md`, this image will be used as the archive topic card image. This image can be replaced by naming the new image `archive` with either the `.jpg`, `.png`, or `.svg` file extensions.\n\n  - **archive.zip**: This is an archived file which can be linked to and downloaded from the course site. You should replace this with your own `.zip`, `.rar`, or `.tar.gz` files.\n\n\n## github-\\*-template-* / web-*\n\nThese folders can be located within a `unit-*` or `topic-*` folder and contain the following files:\n  - **github / web.md**: This file is where the `title` and `description` are specified for a GitHub / Web topic card. This is viewable in the the corresponding card in the chosen topic. This file also specifies the icon used on the GitHub / Web card.\n\n  - **github / web.jpg**: If no icon is specified in `github / web.md`, this image will be used as the topic card image. This image can be replaced by naming the new image `github / web` with either the `.jpg`, `.png`, or `.svg` file extensions.\n\n  - **githubid / weburl**: This file can be opened with Notepad and simply contains the URL to the GitHub repo / website of your choosing.\n\n## book-*\n\nWithin each `unit-*` folder is both a `book-*` and `talk-*` folder, the `book-*` folder contains a series of lab steps. Each file represents a single lab step.\n\nLab file names dictate the lab step order, with the first step also dictating the breadcrumb output. This is demonstrated in the Lab File Names section below.\n\nThis folder also contains the `archives` and `img` folders. These are where any archive or image files relating to this lab must be stored.\n\n## talk-*\n\nThis is on the same file structure level as the `book-*` folders and contains the following files:\n  - **talk-1.md**: This file is where the `lecture title` and `description` are specified. This is viewable in the the corresponding lecture card within a chosen course. This file also specifies the icon used on the lecture card.\n\n  - **talk-1.jpg**: If no icon is specified in `talk.md`, this image will be used as the lecture card image. This image can be replaced by naming the new image `talk-1` with either the `.jpg`, `.png`, or `.svg` file extensions.\n\n  - **talk-1.pdf**: This file is the slide deck which will be viewable and downloadable, you can replace this with your own `.pdf` file.\n\n## Lab File Names\n\n1. Lab file names and titles control the output displayed in breadcrumbs and lab pages. Study the following image to see how these correspond:\n\n    ![Comparison](img/compare.png)\n\n2. The filename controls the breadcrumb output at the lab level, while the file title controls the page title on the sidebar and in the page content itself.         \n\n3. The correct syntax for a filename is `2 digit` step number - `YourWord` - `.md`:\n\n    ~~~html\n    00.Markdown.md\n    ~~~ \n\nThe Deep Dive section of this documentation will detail editing these files using Markdown.\n","route":"#lab/{{COURSEURL}}/topic-01/unit-2/book-a/Files"},{"title":"# Update your Tutors Course","shortTitle":"Updates","contentMd":"# Update your Tutors Course\n\nNow you understand the structure of Tutors, lets add an image and archive to a lab step and go through the process of redeploying the website with the updated files.\n\n1. Select an image to use to test image links. This image must be a `.jpg` or `.png` file.\n\n2. In your `tutors-starter` folder, open `topic-01` -> `unit-1` -> `book-a` -> `img`, then copy your image into this folder.\n\n3. Return to the `book-a` folder and open the `00.Lab-01.md` file.\n    ![Open in Typora](img/openlab.png)\n\n4. Below the sample text, enter the following, replacing the capitalized file name with the name of your own image with the correct file extension:\n    - If you arn't sure what file extension your image is, just hover over it, `Right Click` -> `Properties`, then check the `Type of file` field.\n    ~~~html\n    ![Image Title](img / FILE_NAME.EXTENSION) - Remove the spaces, these are there only to show a relative path.\n    ![Image Title](img/FILE_NAME.EXTENSION) - Markdown automatically adds the absolute path.\n    ~~~\n\n5. After entering the image line, you will notice that Typora automatically shows the image in the editor.\n    ![Sample Img](img/sampimg.png)\n\n6. Images and archives in Tutors use relative paths, eliminating the need to type out the full path to the image or archive, and instead allows you to start at the `img` or `archives` folders, like so:\n    - **Note**: Remove any spaces from the relative paths shown here:\n    ~~~hmtl\n    ![Image Title](img / FILE_NAME.EXTENSION)\n    - [Archive Title](archives / FILE_NAME.EXTENSION)\n    ~~~\n\n7. In the above example, notice that an image is denoted by a `!`, while bullet points are denoted by a `-` or `*` followed by a space (` `). This is followed by the image or link title specified by you within the `[]`, and finally the relative file path inside `()`.\n\n8. Archive files which you wish to include must be copied into the `book-a` -> `archives` folder. You can add your own `.zip`, `.rar`, or `.tar.gz` file here, or use the one included for the purposes of this test.\n\n9. Below the image added earlier, type the following, again removing spaces in the path:\n    ~~~html\n    - [My Archive](archives / archive.zip)\n    ~~~\n    ![Archive Sample](img/archsamp.png)\n\n10. Navigate back to the root `tutors-starter` folder and open `properties.yaml`. This file can be opened with any text editor, the simplest being Notepad.\n    - To open the file with Notepad, simply `Right click` the file -> `Open with..` -> `More Apps` -> Scroll down to `Notepad`. You may also set Notepad as your default editor for `.yaml` files by selecting the box provided. \n    ![Properties.yaml](img/creds.png)\n\n11. Enter your details on the credits line of this file and select `File` -> `Save` or press `Ctrl+S`.  \n\nIn the next lab step we will apply these changes to the live website.    ","route":"#lab/{{COURSEURL}}/topic-01/unit-2/book-a/Updates"},{"title":"# Regenerate and Redeploy","shortTitle":"Redeploy","contentMd":"# Regenerate and Redeploy\n\nEach time you make changes to your course files, this process must be repeated for the updates to take effect.\n\nThe file structure regeneration process produces the `json` folder located within the `tutors-starter` folder. The course template you downloaded at the start of this tutorial came with a  pre-generated `json` folder for convenience but this folder is now out of date as you have made updates to the files which are used to generate the `json` folder.\n\nTo regenerate the `json` folder:\n\n1. Open the Terminal / Command Prompt.\n    - This can be done by pressing the `Windows Key`, then type \"**command**\". You will see this icon appear; select it.\n    ![The Windows Key](img/windows-keyboard.jpg)\n    ![terminal Icon](img/cmdic.png)\n\n2. You are now in the terminal which will allow you to traverse through the folders and files on your PC, and run commands. First, you need to change directory to the location of `tutors-starter`.\n    - **Note**: The default location in the terminal is the current users `Home` directory. \n    ![Terminal](img/cmd.png)\n    - This means that if your `tutors-starter` directory is located in Documents, the command to traverse into the Documents folder is `cd Documents`.\n    ![Changed Directory](img/cmd2.png)\n    - This is also true for the `Desktop`, `Downloads`, and any other folders located in your user home directory, meaning the commands for these folders would be `cd Desktop` and `cd Documents`\n\n3. Now you are located within the `Documents` folder you can move into the `tutors-starter` folder with `cd tutors-starter`.\n    - **Note**: You can do `step 2` and `step 3` with 1 command: `cd Documents/tutors-starter`.\n\n    ![Changed to Tutors Directory](img/cmd3.png)\n\n4. You are now in the `tutors-starter` folder and can run the following command to regenerate the `json` folder:\n    ~~~\n    npx tutors-json\n    ~~~\n\n5. After the process finishes, it will output a tree depicting your course structure and you will see the type prompt reappear, indicating the regeneration is complete.\n    ![Output](img/cmd4.png)\n    \n6. Open [Netlify](https://netlify.com) and log in.\n\n7. From the `Site Overview` page, select `Deploys` from the top navigation bar.\n    ![Deploys](img/nav.png)\n\n8. Open your `Documents` directory and navigate to your `tutors-starter` folder. Drag and drop the newly regenerated `json` folder into the box provided by Netlify in the browser.\n    ![Drag](img/dnd.png)\n\n9. The site should take just a few seconds to deploy so you can select the link from the `Site Overview` page and take a look.\n\n10. Notice how the credits have updated to your own name, then navigate to `topic-01` -> `Lab-01`.\n    ![Credits](img/cred.png)\n\n11. Notice the image is now present, alongside a downloadable archive file:\n    ![All Visible](img/all.png)\n\nYou should now have a good understanding of each components purpose and the process of updating and redoploying the course website. The next topic dives further into the Markdown notation, opening new avenues for course layout and formatting.","route":"#lab/{{COURSEURL}}/topic-01/unit-2/book-a/Redeploy"}]}]}]},{"title":" Deep Dive ","type":"topic","summary":"<b>Format your course using the Markdown notation</b>","img":"https://{{COURSEURL}}/topic-02/topic.jpg","videoids":{"videoid":"","videoIds":[]},"id":"topic-02","route":"#topic/{{COURSEURL}}/topic-02","hide":false,"frontMatter":{"icon":{"type":"flat-color-icons:sports-mode"}},"los":[{"title":" Format a Course with Markdown ","type":"unit","summary":"","img":"https://{{COURSEURL}}/topic-02/unit-1/talk-1/talk-1.jpg","videoids":{"videoid":"","videoIds":[]},"id":"unit-1","route":"#topic/{{COURSEURL}}/topic-02/","hide":false,"los":[{"title":" Format a Course ","type":"talk","summary":"<b>Lecture: Learn how to format a Tutors course using Markdown</b>","img":"https://{{COURSEURL}}/topic-02/unit-1/talk-1/talk-1.jpg","videoids":{"videoid":"","videoIds":[]},"id":"talk-1","route":"#talk/{{COURSEURL}}/topic-02/unit-1/talk-1/talk-1.pdf","hide":false,"frontMatter":{"icon":{"type":"vscode-icons:file-type-markdown"}},"pdf":"https://{{COURSEURL}}/topic-02/unit-1/talk-1/talk-1.pdf"},{"title":"Markdown","type":"lab","summary":"<b>Learn Markdown fundamentals and update your site</b>\r","img":"https://{{COURSEURL}}/topic-02/unit-1/book-a/img/main.jpg","videoids":{"videoid":"","videoIds":[]},"id":"book-a","route":"#lab/{{COURSEURL}}/topic-02/unit-1/book-a","hide":false,"frontMatter":{"icon":{"type":"vscode-icons:file-type-markdown"}},"los":[{"title":"# Markdown","shortTitle":"Markdown","contentMd":"# Markdown\r\n\r\n\r\n<b>Learn Markdown fundamentals and update your site</b>\r\n\r\n- Formatting Text\r\n\r\n\r\n- Structure Documents\r\n\r\n\r\n- Code Blocks\r\n\r\n\r\n- Tables\r\n\r\n\r\n- Links\r\n\r\n\r\n- Images\r\n\r\n\r\n- Maths\r\n\r\n\r\n- Lab File Names\r\n\r\n\r\n- Change Card Icons\r\n\r\n\r\n- Regenerate and Redeploy","route":"#lab/{{COURSEURL}}/topic-02/unit-1/book-a/Markdown"},{"title":"# Text","shortTitle":"Text","contentMd":"# Text\r\n\r\nIt's very easy to make some words **bold** and other words *italic* with Markdown. You can even [insert a link to Google](http://google.com)\r\n\r\n~~~\r\nIt's very easy to make some words **bold** and other words *italic* with Markdown. You can even [insert a link to Google](http://google.com)\r\n~~~\r\n\r\nHTML works in markdown, allowing the use of tags like <span style=\"color:red\">span</span> and <u>underline</u>.\r\n\r\n~~~html\r\nHTML works in markdown, allowing the use of tags like <span style=\"color:red\">span</span> and <u>underline</u>.\r\n~~~\r\n\r\n## Lists\r\n\r\nTo use `numbered lists`, just number your list:\r\n\r\n1. One\r\n2. Two\r\n3. Three\r\n\r\n~~~\r\n1. One\r\n2. Two\r\n3. Three\r\n~~~\r\n\r\nTo use `bullet points`:\r\n\r\n* Start a Line With a Star\r\n- Or a Dash!\r\n\r\n~~~html\r\n* Start a Line With a Star\r\n- Or a Dash!\r\n~~~\r\n \r\n<br />\r\n\r\n# Structure Documents\r\n\r\n Start lines with `#` to create headings. Multiple `##` in a row denote smaller heading sizes.\r\n\r\n## This is a second-tier heading\r\n### This is a third-tier heading\r\n#### You get the picture..\r\n<br />\r\n\r\nYou can use one `#` all the way up to `######` six for different heading sizes.\r\n\r\n~~~\r\n## This is a second-tier heading\r\n### This is a thrid-tier heading\r\n#### You get the picture..\r\n~~~\r\n\r\nTo use `quote formatting`, enter the `>` character before the line:\r\n\r\n> Coffee. The finest organic suspension ever devised... I beat the Borg with it.\r\n> - Captain Janeway\r\n\r\n~~~\r\n> Coffee. The finest organic suspension ever devised... I beat the Borg with it.\r\n> - Captain Janeway\r\n~~~\r\n<br />\r\n# Code Blocks\r\n\r\nInline code blocks can be wrapped in backticks: `var example = true`:\r\n\r\n~~~\r\n`var example = true`\r\n~~~ \r\n\r\nFor code that spans more than one line, you can indent with four spaces:\r\n\r\n    if (isAwesome){\r\n      return true\r\n    }\r\n\r\n~~~\r\n    if (isAwesome){\r\n      return true\r\n    }\r\n~~~\r\n\r\nCode fencing is supported, which are the code blocks used throughout this guide. To do this, use `~~~` above and below the block of code. (The following example uses `|` to be able to show the use of `~~~`, do NOT include `|` in your site):\r\n\r\n~~~\r\nif (isAwesome){\r\n  return true\r\n}\r\n~~~\r\n\r\n~~~\r\n|~~~\r\n|if (isAwesome){\r\n|  return true\r\n|}\r\n|~~~\r\n~~~","route":"#lab/{{COURSEURL}}/topic-02/unit-1/book-a/Text"},{"title":"# Tables","shortTitle":"Tables","contentMd":"# Tables\r\n\r\n\r\n`Tables` can look like this:\r\n\r\n| Tables        | Are           | Great |\r\n| ------------- |:-------------:| -----:|\r\n| Column 1 is   | Left-aligned  | $1600 |\r\n| Column 2 is   | Centered      |   $12 |\r\n| Column 3 is   | Right-aligned |    $1 |\r\n\r\n~~~\r\n| Tables        | Are           | Great |\r\n| ------------- |:-------------:| -----:|\r\n| Column 1 is   | Left-aligned  | $1600 |\r\n| Column 2 is   | Centered      |   $12 |\r\n| Column 3 is   | Right-aligned |    $1 |\r\n~~~\r\n","route":"#lab/{{COURSEURL}}/topic-02/unit-1/book-a/Tables"},{"title":"# Links","shortTitle":"Links","contentMd":"# Links\r\n\r\nYou can insert links in `bullet points`:\r\n\r\n- <http://github.com>\r\n- <http://netlify.com>\r\n\r\n~~~html\r\n- <http://github.com>\r\n- <http://netlify.com>\r\n~~~\r\n\r\nYou can choose the link text:\r\n\r\n- [GitHub](http://github.com)\r\n- [Netlify](http://netlify.com)\r\n\r\n~~~\r\n- [GitHub](http://github.com)\r\n- [Netlify](http://netlify.com)\r\n~~~\r\n\r\nYou can link to other steps:\r\n\r\n- [Markdown](https://tutors-svelte.netlify.app/#/lab/tutors-doc.netlify.app/topic-02/unit-1/book-a/Markdown)\r\n\r\n~~~html\r\n- [Markdown](https://tutors-svelte.netlify.app/#/lab/tutors-doc.netlify.app/topic-02/unit-1/book-a/Markdown)\r\n~~~\r\n\r\n<br />\r\n\r\n# Images\r\n\r\nIf you want a link to a local image, place the image in the `img` folder and then insert a link like this:\r\n\r\n![](img/02.jpg)\r\n\r\n~~~html\r\n![](img / 02.jpg) Remove the spaces, these are to show you can use a relative path.\r\n![](img/02.jpg) Markdown automatically adds the absolute path.\r\n~~~\r\n\r\nYou can directly link to images on the web, and include alt text for your image:\r\n\r\n![Learning](https://73v3u36iopz178i0z3a33g7d-wpengine.netdna-ssl.com/wp-content/uploads/2018/10/learning-experience-matters-498x500.jpg)\r\n\r\n\r\n~~~html\r\n![Learning](https://73v3u36iopz178i0z3a33g7d-wpengine.netdna-ssl.com/wp-content/uploads/2018/10/learning-experience-matters-498x500.jpg)\r\n~~~\r\n<br />","route":"#lab/{{COURSEURL}}/topic-02/unit-1/book-a/Links"},{"title":"# Maths","shortTitle":"Maths","contentMd":"# Maths\r\n\r\nYou can use the Maths module to format maths equations. This is supported via the [Katex](https://katex.org/) library.\r\n\r\n## Example 0\r\n\r\n```asciimath\r\nE=mc^2\r\n```\r\n~~~\r\n```asciimath\r\nE=mc^2\r\n```\r\n~~~\r\n\r\n## Example 1\r\n\r\n```latex\r\nc = \\pm\\sqrt{a^2 + b^2}\r\n```\r\n~~~\r\n```latex\r\nc = \\pm\\sqrt{a^2 + b^2}\r\n```\r\n~~~\r\n## Example 2\r\n\r\n```latex\r\nx=\\frac{ -b\\pm\\sqrt{ b^2-4ac } } {2a}\r\n```\r\n~~~\r\n```latex\r\nx=\\frac{ -b\\pm\\sqrt{ b^2-4ac } } {2a}\r\n```\r\n~~~\r\n## Example 3\r\n\r\n```latex\r\nf(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\r\n```\r\n~~~\r\n```latex\r\nf(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\r\n```\r\n~~~\r\n## Example 4\r\n\r\n```asciimath\r\ng(x) = 3x^4 + 2x^2\r\n```\r\n~~~\r\n```asciimath\r\ng(x) = 3x^4 + 2x^2\r\n```\r\n~~~\r\n## Example 5\r\n\r\n```latex\r\n\r\nx=\\frac{ -b\\pm\\sqrt{ b^2-4ac } } {2a}\r\n\r\n\\sum_{i=1}^n i^3 = \\left( \\frac{n(g(n)+1)} 2 \\right) ^2\r\n\r\nc = \\pm\\sqrt{a^2 + b^2}\r\n```\r\n~~~\r\n```latex\r\n\r\nx=\\frac{ -b\\pm\\sqrt{ b^2-4ac } } {2a}\r\n\r\n\\sum_{i=1}^n i^3 = \\left( \\frac{n(g(n)+1)} 2 \\right) ^2\r\n\r\nc = \\pm\\sqrt{a^2 + b^2}\r\n```\r\n~~~\r\n## Example 6\r\n\r\n~~~latex\r\n\r\n\\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}} {1+\\frac{e^{-8\\pi}} {1+\\cdots} } } }\r\n\r\n~~~\r\n~~~\r\n```latex\r\n\r\n\\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}} {1+\\frac{e^{-8\\pi}} {1+\\cdots} } } }\r\n\r\n```\r\n~~~\r\n## Example 7\r\n\r\n~~~latex\r\n1 +  \\frac{q^2}{(1-q)}+\\frac{q^6}{(1-q)(1-q^2)}+\\cdots = \\prod_{j=0}^{\\infty}\\frac{1}{(1-q^{5j+2})(1-q^{5j+3})}, \\quad\\quad \\text{for }\\lvert q\\rvert<1.\r\n~~~\r\n~~~\r\n```latex\r\n1 +  \\frac{q^2}{(1-q)}+\\frac{q^6}{(1-q)(1-q^2)}+\\cdots = \\prod_{j=0}^{\\infty}\\frac{1}{(1-q^{5j+2})(1-q^{5j+3})}, \\quad\\quad \\text{for }\\lvert q\\rvert<1.\r\n```\r\n~~~","route":"#lab/{{COURSEURL}}/topic-02/unit-1/book-a/Maths"},{"title":"# Changing Card Icons","shortTitle":"Icons","contentMd":"# Changing Card Icons\r\n\r\n Applying icons also changes the image in the top left of the screen on `Course` and `Topic` pages, taking precedence over images applied in the previous step. You may use either `images` or `icons` for card and logo content, although `icons` are recommended as they are far easier to work with.\r\n\r\n To change the image on each `Course` or `Topic` card and logo to be uniform and easily configurable as seen below, follow these steps:\r\n\r\n![Card Image](img/bookcard.png)\r\n\r\n![Top Left Icon](img/topleft.png)\r\n\r\n1. Navigate to [Iconify](https://icon-sets.iconify.design/).\r\n\r\n2. These are packs of icons which are fully compatible with Tutors. Select the pack you want to use:\r\n\r\n    ![Icon Packs](img/packs.png)\r\n\r\n3. Then select the `icon` which you want to use:\r\n\r\n    ![Logo Icons](img/rhicon.png)\r\n\r\n4. This opens the icon details section. Copy the icon name:\r\n\r\n    ![Red Hat Icon](img/rhdeets.png)\r\n\r\n5. Open `course.md` or `topic.md`, then copy this template into the top of the file, above the title, and replace `logos:redhat-icon` with your chosen icon name from Iconify:\r\n    ~~~\r\n    ---\r\n    icon:\r\n      type: logos:redhat-icon\r\n    ---\r\n    ~~~\r\n\r\n6. Some icons can be changed colour (The color picker on the website does not dictate the color, but is a clue as to which icons can be customised):\r\n\r\n    ![Coloured Icon](img/color.png)\r\n\r\n    ~~~\r\n    ---\r\n    icon:\r\n      type: heroicons-outline:book-open\r\n      color: red\r\n    ---   \r\n    ~~~ \r\n\r\n","route":"#lab/{{COURSEURL}}/topic-02/unit-1/book-a/Icons"},{"title":"# Properties.yaml","shortTitle":"Properties.yaml","contentMd":"# Properties.yaml\r\n\r\n\r\n1. Take note of the `ignore` and `ignorepin` section. These allow you to hide course content from students. To show the folder, simply enter the pin on the frontpage of your course site, remove the folder name from the `ignore` section, or use this syntax: (The `#` symbol indicates the topic is shown. Remove the `#` to hide the topic.)\r\n\r\n    ~~~html\r\n    ignorepin : 1111\r\n    ignore    : \r\n    # - topic-01-docs\r\n     - topic-05-hidden\r\n    ~~~ \r\n\r\n2. In this example, the pin is `1111`. If `1111` is typed into the keyboard while on the front page of the website, and while the site is your current window, the hidden course content will be enabled.\r\n\r\n    ![Show Hidden](img/hiddenshown.png)\r\n\r\n\r\n3. You can choose your own icon set to be used throughout the site in the `properties.yaml` file. If you don't include this section, or comment it out (`#`), the default Tutors icon set will be used. \r\n\r\n4. The first line of each icon section indicates the icon to be changed. In this example, the `Moodle` and `GitHub` icons are changed to a custom selection, while the rest are commented out, reverting to the default icon. You can refer to this list when deciding on your own set as this is the extensive list of icon elements in Tutors.\r\n\r\n There are thousands of icons to build your own set at [Iconify](https://icon-sets.iconify.design/).\r\n\r\n    ~~~\r\n    iconset:\r\n     moodle:\r\n       icon: fa-solid:graduation-cap\r\n       colour: warning\r\n     github:\r\n       icon: logos:github-octocat\r\n       colour: warning   \r\n     # programHome:\r\n     #   icon: heroicons-outline:home\r\n     #   colour: success\r\n     # slack:\r\n     #   icon: grommet-icons:slack\r\n     #   colour: error\r\n     # youtube:\r\n     #   icon: logos:youtube-icon\r\n     #   colour: error\r\n     # video:\r\n     #   icon: heroicons-outline:play\r\n     #   colour: error\r\n     # zoom:\r\n     #   icon: grommet-icons:zoom\r\n     #   colour: info\r\n     # course:\r\n     #   icon: heroicons-outline:book-open\r\n     #   colour: info\r\n     # topic:\r\n     #   icon: heroicons-outline:view-boards\r\n     #   colour: info\r\n     # unit:\r\n     #   icon: heroicons-outline:collection\r\n     #   colour: success\r\n     # talk:\r\n     #   icon: heroicons-outline:presentation-chart-bar\r\n     #   colour: info\r\n     # reference:\r\n     #   icon: heroicons-outline:document-duplicate\r\n     #   colour: warning\r\n     # lab:\r\n     #   icon: heroicons-outline:beaker\r\n     #   colour: success\r\n     # archive:\r\n     #   icon: heroicons-outline:archive\r\n     #   colour: info\r\n     # web:\r\n     #   icon: heroicons-outline:bookmark\r\n     #   colour: info\r\n     # github:\r\n     #   icon: heroicons-outline:terminal\r\n     #   colour: warning\r\n     # panelvideo:\r\n     #   icon: heroicons-outline:play\r\n     #   colour: error\r\n     # left:\r\n     #   icon: heroicons-outline:arrow-left\r\n     #   colour: success\r\n     # right:\r\n     #   icon: heroicons-outline:arrow-right\r\n     #   colour: success\r\n     # print:\r\n     #   icon: heroicons-outline:printer\r\n     #   colour: success\r\n     # rotate:\r\n     #   icon: heroicons-outline:refresh\r\n     #   colour: success\r\n     # download:\r\n     #   icon: heroicons-outline:arrow-down\r\n     #   colour: success\r\n     # fullScreen:\r\n     #   icon: heroicons-outline:arrows-expand\r\n     #   colour: success\r\n     # expand:\r\n     #   icon: heroicons-outline:switch-horizontal\r\n     #   colour: success\r\n     # tutorsTime:\r\n     #   icon: heroicons-outline:clock\r\n     #   colour: info\r\n     # timeExport:\r\n     #   icon: heroicons-outline:save-as\r\n     #   colour: success\r\n     # live:\r\n     #   icon: heroicons-outline:users\r\n     #   colour: success\r\n     # search:\r\n     #   icon: heroicons-outline:search\r\n     #   colour: info\r\n     # tutors:\r\n     #   icon: fa-solid:chalkboard-teacher\r\n     #   colour: white\r\n     # logout:\r\n     #   icon: heroicons-outline:logout\r\n     #   colour: error\r\n     # dark:\r\n     #   icon: heroicons-outline:moon\r\n     #   colour: warning\r\n     # toc:\r\n     #   icon: heroicons-outline:menu-alt-2\r\n     #   colour: white\r\n     # compacted:\r\n     #   icon: heroicons-outline:dots-vertical\r\n     #   colour: white\r\n     # expanded:\r\n     #   icon: heroicons-outline:dots-horizontal\r\n     #   colour: white\r\n     # default:\r\n     #   icon: heroicons-outline:dots-vertical\r\n     #   colour: white\r\n\r\n    ~~~\r\n","route":"#lab/{{COURSEURL}}/topic-02/unit-1/book-a/Properties.yaml"},{"title":"# Regenerate and Redeploy","shortTitle":"Redeploy","contentMd":"# Regenerate and Redeploy\n\nEach time you make changes to your course files, this process must be repeated for the updates to take effect.\n\nThe file structure regeneration process produces the `json` folder located within the `tutors-starter` folder. The course template you downloaded at the start of this tutorial came with a  pre-generated `json` folder for convenience but this folder is now out of date as you have made updates to the files which are used to generate the `json` folder.\n\nTo regenerate the `json` folder:\n\n1. Open the Terminal / Command Prompt.\n    - This can be done by pressing the `Windows Key`, then type \"**command**\". You will see this icon appear; select it.\n    ![The Windows Key](img/windows-keyboard.jpg)\n    ![terminal Icon](img/cmdic.png)\n\n2. You are now in the terminal which will allow you to traverse through the folders and files on your PC, and run commands. First, you need to change directory to the location of `tutors-starter`.\n    - **Note**: The default location in the terminal is the current users `Home` directory. \n    ![Terminal](img/cmd.png)\n    - This means that if your `tutors-starter` directory is located in Documents, the command to traverse into the Documents folder is `cd Documents`.\n    ![Changed Directory](img/cmd2.png)\n    - This is also true for the `Desktop`, `Downloads`, and any other folders located in your user home directory, meaning the commands for these folders would be `cd Desktop` and `cd Documents`\n\n3. Now you are located within the `Documents` folder you can move into the `tutors-starter` folder with `cd tutors-starter`.\n    - **Note**: You can do `step 2` and `step 3` with 1 command: `cd Documents/tutors-starter`.\n\n    ![Changed to Tutors Directory](img/cmd3.png)\n\n4. You are now in the `tutors-starter` folder and can run the following command to regenerate the `json` folder:\n    ~~~\n    npx tutors-json\n    ~~~\n\n5. After the process finishes, it will output a tree depicting your course structure and you will see the type prompt reappear, indicating the regeneration is complete.\n    ![Output](img/cmd4.png)\n    \n6. Open [Netlify](https://netlify.com) and log in.\n\n7. From the `Site Overview` page, select `Deploys` from the top navigation bar.\n    ![Deploys](img/nav.png)\n\n8. Open your `Documents` directory and navigate to your `tutors-starter` folder. Drag and drop the newly regenerated `json` folder into the box provided by Netlify in the browser.\n    ![Drag](img/dnd.png)\n\n9. The site should take just a few seconds to deploy so you can select the link from the `Site Overview` page and take a look.\n\n\nYou should now have a good understanding of each components purpose and the process of updating and redoploying the course website. The next topic dives further into the Markdown notation, opening new avenues for course layout and formatting.","route":"#lab/{{COURSEURL}}/topic-02/unit-1/book-a/Redeploy"}]}]},{"title":"GitHub Integration ","type":"unit","summary":"","img":"https://{{COURSEURL}}/topic-02/unit-2/talk-1/talk-1.jpg","videoids":{"videoid":"","videoIds":[]},"id":"unit-2","route":"#topic/{{COURSEURL}}/topic-02/","hide":false,"los":[{"title":" Integrate GitHub ","type":"talk","summary":"<b>Lecture: Learn how to integrate GitHub into your Tutors course</b>","img":"https://{{COURSEURL}}/topic-02/unit-2/talk-1/talk-1.jpg","videoids":{"videoid":"","videoIds":[]},"id":"talk-1","route":"#talk/{{COURSEURL}}/topic-02/unit-2/talk-1/talk-1.pdf","hide":false,"frontMatter":{"icon":{"type":"logos:github-octocat"}},"pdf":"https://{{COURSEURL}}/topic-02/unit-2/talk-1/talk-1.pdf"},{"title":"GitHub","type":"lab","summary":"<b>Lab: Learn how to integrate GitHub into your Tutors course</b>","img":"https://{{COURSEURL}}/topic-02/unit-2/book-a/img/main.jpg","videoids":{"videoid":"","videoIds":[]},"id":"book-a","route":"#lab/{{COURSEURL}}/topic-02/unit-2/book-a","hide":false,"frontMatter":{"icon":{"type":"logos:github-octocat"}},"los":[{"title":"# GitHub Integration","shortTitle":"GitHub","contentMd":"# GitHub Integration\n\n<b>Lab: Learn how to integrate GitHub into your Tutors course</b>\n<br />\n\n\n- Install GitHub Desktop\n\n\n- Clone a Tutors template course\n\n\n- Create a repository\n\n\n- Configure Netflify\n\n\n- Make changes via GitHub Desktop","route":"#lab/{{COURSEURL}}/topic-02/unit-2/book-a/GitHub"},{"title":"# GitHub Desktop","shortTitle":"Git","contentMd":"# GitHub Desktop\n\n1. If you don't already have a GitHub account, follow this link and create one now:\n    - [Join GitHub](https://github.com)\n2. Download the GitHub Desktop application:\n    - [GitHub Desktop](https://desktop.github.com/)\n3. Run the application and select `Next` until installation begins.\n4. Once the installation is complete, launch the application and log in, we'll use this later.","route":"#lab/{{COURSEURL}}/topic-02/unit-2/book-a/Git"},{"title":"# Create a Remote Repository","shortTitle":"Repository","contentMd":"# Create a Remote Repository\n\n1. In GitHub Desktop, navigate to `File` -> `Add local repository..`\n    ![Add Local](img/local.png)\n2. Select `Choose`, then navigate to your `tutors-starter` folder.\n3. As the folder is not linked to a remote repository, you will be prompted to `create a repository`, select the link shown here:\n    ![Create](img/create.png)\n4. Enter your desired repository name and select `Create Repository`.\n    ![Name Repo](img/namerepo.png)\n5. You will need to re-enter the repository name, then deselect the `Keep this code private` box and click `Publish repository`.\n    ![Re-enter Name](img/reenter.png)\nYou now have a file structure stored in a remote repository on GitHub which is used by Netlify to build and deploy the course website.\nIn the next step you will configure Netlify and deploy your Tutors course.","route":"#lab/{{COURSEURL}}/topic-02/unit-2/book-a/Repository"},{"title":"# Configure Netlify","shortTitle":"Netlify","contentMd":"# Configure Netlify\n\n1. Follow this link and login via GitHub:\n    - [Login to Netlify](https://netlify.com)\n2. Select `New site from Git`\n\n3. Under Continuous Deployment, select `GitHub` as your Git provider.\n    ![Select GitHub](img/15-netlify.png)\n\n4. Authorise Netlify to access your repository and select the repository from the list provided.\n    ![Select your Repo](img/16-selectrepo.png)\n\n5. Under `Basic build settings`, enter the following:\n\n`Build command:`\n  ~~~\n  tutors-json\n  ~~~\n`Publish directory:`\n  ~~~\n  json\n  ~~~\n\n6. Select `Deploy Site`\n\n    ![Deploy your Site](img/17-deploy.png)\n\n7. Netlify will build your website and set the status of the deploy to `Published`.\n    ![Deploying](img/18-start.png)\n    ![Published](img/19-published.png)\n8. Select the `Domain settings` button and scroll down to the `Custom Domains` section.\n    ![Domain Settings](img/20-domain.png)\n9. Click the `Dropdown Options` button and select `Edit site name`.\n    ![Edit Site Name](img/21-sitename.png)\n10. Enter the desired domain name for your Tutors site and click `Save`.\n    ![Choose a Name](img/22-changed.png)\n11. Your site is now setup, click the link shown here to have a look.\n    ![Link to your Website](img/tdocs.png)","route":"#lab/{{COURSEURL}}/topic-02/unit-2/book-a/Netlify"},{"title":"# Update via GitHub Desktop","shortTitle":"Updates","contentMd":"# Update via GitHub Desktop\n\n**The following steps must be followed every time you wish to update the live site with the changes you have made**\n\n1. Use Markdown to make some changes to your Tutors course.\n\n2. For any change to take effect, you must open GitHub Desktop and enter a summary of your changes with an optional description. \n\n10. Press `Commit to main`. This will push updates from your local machine, into staging, ready to be pushed into the remote repository.\n\n    ![Commit](img/commit.png)\n\n11. Now select `Push origin` to synchronise your local and remote repositories.\n\n    ![Push](img/push.png)\n\n12. Netlify will automatically update your website with the changes pushed to the remote repository.\n\n13. Open your course site in a browser and refresh the page. This may take ~30 secs, hold the `Shift` key and refresh the page to clear the page cache.\n    ![Updated Front Page](img/updatedfront.png)\n","route":"#lab/{{COURSEURL}}/topic-02/unit-2/book-a/Updates"}]}]}]},{"title":" Accessibilty\r ","type":"topic","summary":"<b>What accessibility means and why it's important</b>","img":"https://{{COURSEURL}}/topic-03/topic.png","videoids":{"videoid":"","videoIds":[]},"id":"topic-03","route":"#topic/{{COURSEURL}}/topic-03","hide":false,"frontMatter":{"icon":{"type":"flat-color-icons:conference-call","color":"pink"}},"los":[{"title":" Intro to Accessiblity\r ","type":"talk","summary":"<b>One size does not fit all</b>","img":"https://{{COURSEURL}}/topic-03/talk-1/talk-1.png","videoids":{"videoid":"","videoIds":[]},"id":"talk-1","route":"#talk/{{COURSEURL}}/topic-03/talk-1/talk-1.pdf","hide":false,"frontMatter":{"icon":{"type":"openmoji:people-dialogue","color":"pink"}},"pdf":"https://{{COURSEURL}}/topic-03/talk-1/talk-1.pdf"},{"title":" Improving Usability\r ","type":"talk","summary":"<b>Aim to provide the same user experience for all</b>","img":"https://{{COURSEURL}}/topic-03/talk-2/talk-2.png","videoids":{"videoid":"","videoIds":[]},"id":"talk-2","route":"#talk/{{COURSEURL}}/topic-03/talk-2/talk-2.pdf","hide":false,"frontMatter":{"icon":{"type":"openmoji:collaboration","color":"pink"}},"pdf":"https://{{COURSEURL}}/topic-03/talk-2/talk-2.pdf"},{"title":" Colour Scheme\r ","type":"talk","summary":"<b>Look at current colours and begin to shape out the new colour scheme</b>","img":"https://{{COURSEURL}}/topic-03/talk-3/talk-3.png","videoids":{"videoid":"","videoIds":[]},"id":"talk-3","route":"#talk/{{COURSEURL}}/topic-03/talk-3/talk-3.pdf","hide":false,"frontMatter":{"icon":{"type":"openmoji:paintbrush","color":"pink"}},"pdf":"https://{{COURSEURL}}/topic-03/talk-3/talk-3.pdf"},{"title":" Refining Colours\r ","type":"talk","summary":"<b>Dive deeper into colour scheme, refining for accessibility</b>","img":"https://{{COURSEURL}}/topic-03/talk-4/talk-4.png","videoids":{"videoid":"","videoIds":[]},"id":"talk-4","route":"#talk/{{COURSEURL}}/topic-03/talk-4/talk-4.pdf","hide":false,"frontMatter":{"icon":{"type":"openmoji:rainbow-hexagon","color":"pink"}},"pdf":"https://{{COURSEURL}}/topic-03/talk-4/talk-4.pdf"},{"title":"First Steps","type":"lab","summary":"<b>Simple fixes that can be made now</b>","img":"https://{{COURSEURL}}/topic-03/book-a/img/main.png","videoids":{"videoid":"","videoIds":[]},"id":"book-a","route":"#lab/{{COURSEURL}}/topic-03/book-a","hide":false,"frontMatter":{"icon":{"type":"openmoji:toolbox","color":"pink"}},"los":[{"title":"# First Steps","shortTitle":"First Steps","contentMd":"# First Steps\r\n\r\n<b>Simple fixes that can be made now</b>  ","route":"#lab/{{COURSEURL}}/topic-03/book-a/First Steps"},{"title":"# Objectives","shortTitle":"Lab-01","contentMd":"# Objectives\r\n\r\nA quick walk-through explaining simple set-up.","route":"#lab/{{COURSEURL}}/topic-03/book-a/Lab-01"},{"title":"# Font Style","shortTitle":"01","contentMd":"# Font Style\r\n\r\nLook at what fonts you are currently using, or want to use. There are some factors you should \r\ntake into consideration:\r\n\r\n* Serif Vs. Sans-serif\r\n\r\n![](img/01.png)\r\n\r\nSans-serif fonts are easier to read. They do not distort the shape of the letters. \r\nMany modern fonts for apps are sans-serif because they increase readability and can scale much more easily.\r\n\r\nIf you want there are some fonts designed specifically for dyslexia. If you can't find one you like, there are several other fonts \r\nthat are dylexia friendly.\r\n\r\n![](img/07.png)\r\n\r\n\r\n* How many weights does the font have?\r\n\r\n![](img/03.png)\r\n\r\n\r\n* Does this font scale well on multiple devices?\r\n\r\n![](img/04.png)\r\n\r\nUsers will access your site from devices with different screen sizes and resolutions.\r\n","route":"#lab/{{COURSEURL}}/topic-03/book-a/01"},{"title":"# Font Size","shortTitle":"02","contentMd":"# Font Size\r\n\r\nWhat is the current default font size?\r\n\r\nLarger font is easier to read, but it doesn't have to be huge.\r\n\r\n12-14 pt should be the minimum. \r\n\r\nIf you cannot do this, another option would be to make the website / application scalable.\r\nThis would allow users to easily zoom in and out of content without using usability. ","route":"#lab/{{COURSEURL}}/topic-03/book-a/02"},{"title":"# Font Colour","shortTitle":"03","contentMd":"# Font Colour\r\n\r\nDon’t use the same or similar colours for text and background. The more visible the text, the faster users are able to scan and read it. \r\nThe W3C recommends the following contrast ratios for body text and image text:\r\n\r\n* Small text should have a contrast ratio of at least 4.5:1 against its background.\r\n \r\n*  Large text (at 14 pt bold/18 pt regular and up) should have a contrast ratio of at least 3:1 against its background.\r\n\r\nLook at the below examples: \r\n\r\n![](img/05.png)\r\nThese lines of text do not meet the color contrast ratio recommendations and are difficult to read against their background colors.\r\n\r\n![](img/06.png)\r\nThese lines of text meet the color contrast ratio recommendations and are easy to read against their background colors.","route":"#lab/{{COURSEURL}}/topic-03/book-a/03"},{"title":"# Images","shortTitle":"04","contentMd":"# Images\r\n\r\nImage without a title:\r\n\r\n![](img/04.jpg)\r\n\r\nImage with a title:\r\n\r\n![This is a Stone Arch](img/03.jpg)\r\n","route":"#lab/{{COURSEURL}}/topic-03/book-a/04"},{"title":"# Sources","shortTitle":"Exercises","contentMd":"# Sources\r\n\r\n- [Best Fonts for Mobile App Design](https://www.justinmind.com/blog/best-font-mobile-app-design/)\r\n- [10 Tips on Typography in Web Design](https://uxplanet.org/10-tips-on-typography-in-web-design-13a378f4aa0d)\r\n- [Best Fonts for Websites](https://www.websitebuilderexpert.com/designing-websites/pick-best-font-style-for-website/)\r\n- [OpenDyslexic: A typeface for Dyslexia](https://opendyslexic.org/)","route":"#lab/{{COURSEURL}}/topic-03/book-a/Exercises"}]},{"title":" Useful Links\r ","type":"archive","summary":"<b>ZIP file containing additional supporting websites</b>","img":"https://{{COURSEURL}}/topic-03/archive/archive.png","videoids":{"videoid":"","videoIds":[]},"id":"archive","route":"https://{{COURSEURL}}/topic-03/archive/archive.zip","hide":false,"frontMatter":{"icon":{"type":"openmoji:open-file-folder","color":"pink"}}},{"title":" Web Sites\r ","type":"web","summary":"<b>Supporting website</b>","img":"https://{{COURSEURL}}/topic-03/web-1/web.png","videoids":{"videoid":"","videoIds":[]},"id":"web-1","route":"https://apiumhub.com/tech-blog-barcelona/definition-of-done-examples-software-projects/","hide":false,"frontMatter":{"icon":{"type":"openmoji:spider-web","color":"pink"}}}]}]}